"""
Represents a binary file in a space. An asset can be any file type.
"""
type Asset {
  contentType(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  fileName(locale: String): String
  height(locale: String): Int
  linkedFrom(allowedLocales: [String]): AssetLinkingCollections
  size(locale: String): Int
  sys: Sys!
  title(locale: String): String
  url(locale: String, transform: ImageTransformOptions): String
  width(locale: String): Int
}

type AssetCollection {
  items: [Asset]!
  limit: Int!
  skip: Int!
  total: Int!
}

input AssetFilter {
  AND: [AssetFilter]
  OR: [AssetFilter]
  contentType: String
  contentType_contains: String
  contentType_exists: Boolean
  contentType_in: [String]
  contentType_not: String
  contentType_not_contains: String
  contentType_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  fileName: String
  fileName_contains: String
  fileName_exists: Boolean
  fileName_in: [String]
  fileName_not: String
  fileName_not_contains: String
  fileName_not_in: [String]
  height: Int
  height_exists: Boolean
  height_gt: Int
  height_gte: Int
  height_in: [Int]
  height_lt: Int
  height_lte: Int
  height_not: Int
  height_not_in: [Int]
  size: Int
  size_exists: Boolean
  size_gt: Int
  size_gte: Int
  size_in: [Int]
  size_lt: Int
  size_lte: Int
  size_not: Int
  size_not_in: [Int]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
  width: Int
  width_exists: Boolean
  width_gt: Int
  width_gte: Int
  width_in: [Int]
  width_lt: Int
  width_lte: Int
  width_not: Int
  width_not_in: [Int]
}

type AssetLinkingCollections {
  entryCollection(
    limit: Int = 100
    locale: String
    preview: Boolean
    skip: Int = 0
  ): EntryCollection
  homePageCollection(
    limit: Int = 100
    locale: String
    order: [AssetLinkingCollectionsHomePageCollectionOrder]
    preview: Boolean
    skip: Int = 0
  ): HomePageCollection
  mediaCollection(
    limit: Int = 100
    locale: String
    order: [AssetLinkingCollectionsMediaCollectionOrder]
    preview: Boolean
    skip: Int = 0
  ): MediaCollection
  projectCollection(
    limit: Int = 100
    locale: String
    order: [AssetLinkingCollectionsProjectCollectionOrder]
    preview: Boolean
    skip: Int = 0
  ): ProjectCollection
}

enum AssetLinkingCollectionsHomePageCollectionOrder {
  jobTitle_ASC
  jobTitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum AssetLinkingCollectionsMediaCollectionOrder {
  layout_ASC
  layout_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum AssetLinkingCollectionsProjectCollectionOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum AssetOrder {
  contentType_ASC
  contentType_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  size_ASC
  size_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
  width_ASC
  width_DESC
}

type ContentfulMetadata {
  tags: [ContentfulTag]!
}

input ContentfulMetadataFilter {
  tags: ContentfulMetadataTagsFilter
  tags_exists: Boolean
}

input ContentfulMetadataTagsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

"""
Represents a tag entity for finding and organizing content easily.
    Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
  id: String
  name: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z,
    compliant with the 'date-time' format outlined in section 5.6 of
    the RFC 3339 profile of the ISO 8601 standard for representation
    of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`.
"""
scalar Dimension

interface Entry {
  contentfulMetadata: ContentfulMetadata!
  sys: Sys!
}

type EntryCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

input EntryFilter {
  AND: [EntryFilter]
  OR: [EntryFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

enum EntryOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
The 'HexColor' type represents color in `rgb:ffffff` string format.
"""
scalar HexColor

"""
[See type definition](https://app.contentful.com/spaces/lkq9rik3wezf/content_types/homePage)
"""
type HomePage implements Entry {
  contentfulMetadata: ContentfulMetadata!
  intro(locale: String): HomePageIntro
  jobTitle(locale: String): String
  linkedFrom(allowedLocales: [String]): HomePageLinkingCollections
  profilePicture(locale: String, preview: Boolean): Asset
  projectsCollection(
    limit: Int = 100
    locale: String
    order: [HomePageProjectsCollectionOrder]
    preview: Boolean
    skip: Int = 0
    where: ProjectFilter
  ): HomePageProjectsCollection
  sys: Sys!
  title(locale: String): String
  video(locale: String, preview: Boolean): Asset
}

type HomePageCollection {
  items: [HomePage]!
  limit: Int!
  skip: Int!
  total: Int!
}

input HomePageFilter {
  AND: [HomePageFilter]
  OR: [HomePageFilter]
  contentfulMetadata: ContentfulMetadataFilter
  intro_contains: String
  intro_exists: Boolean
  intro_not_contains: String
  jobTitle: String
  jobTitle_contains: String
  jobTitle_exists: Boolean
  jobTitle_in: [String]
  jobTitle_not: String
  jobTitle_not_contains: String
  jobTitle_not_in: [String]
  profilePicture_exists: Boolean
  projects: cfProjectNestedFilter
  projectsCollection_exists: Boolean
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  video_exists: Boolean
}

type HomePageIntro {
  json: JSON!
  links: HomePageIntroLinks!
}

type HomePageIntroAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type HomePageIntroEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type HomePageIntroLinks {
  assets: HomePageIntroAssets!
  entries: HomePageIntroEntries!
  resources: HomePageIntroResources!
}

type HomePageIntroResources {
  block: [ResourceLink!]!
}

type HomePageLinkingCollections {
  entryCollection(
    limit: Int = 100
    locale: String
    preview: Boolean
    skip: Int = 0
  ): EntryCollection
}

enum HomePageOrder {
  jobTitle_ASC
  jobTitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type HomePageProjectsCollection {
  items: [Project]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum HomePageProjectsCollectionOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ImageFormat {
  AVIF

  """
  JPG image format.
  """
  JPG

  """
  Progressive JPG format stores multiple passes of an image in progressively higher detail.
          When a progressive image is loading, the viewer will first see a lower quality pixelated version which
          will gradually improve in detail, until the image is fully downloaded. This is to display an image as
          early as possible to make the layout look as designed.
  """
  JPG_PROGRESSIVE

  """
  PNG image format
  """
  PNG

  """
  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
          The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  """
  PNG8

  """
  WebP image format.
  """
  WEBP
}

enum ImageResizeFocus {
  """
  Focus the resizing on the bottom.
  """
  BOTTOM

  """
  Focus the resizing on the bottom left.
  """
  BOTTOM_LEFT

  """
  Focus the resizing on the bottom right.
  """
  BOTTOM_RIGHT

  """
  Focus the resizing on the center.
  """
  CENTER

  """
  Focus the resizing on the largest face.
  """
  FACE

  """
  Focus the resizing on the area containing all the faces.
  """
  FACES

  """
  Focus the resizing on the left.
  """
  LEFT

  """
  Focus the resizing on the right.
  """
  RIGHT

  """
  Focus the resizing on the top.
  """
  TOP

  """
  Focus the resizing on the top left.
  """
  TOP_LEFT

  """
  Focus the resizing on the top right.
  """
  TOP_RIGHT
}

enum ImageResizeStrategy {
  """
  Crops a part of the original image to fit into the specified dimensions.
  """
  CROP

  """
  Resizes the image to the specified dimensions, cropping the image if needed.
  """
  FILL

  """
  Resizes the image to fit into the specified dimensions.
  """
  FIT

  """
  Resizes the image to the specified dimensions, padding the image if needed.
          Uses desired background color as padding color.
  """
  PAD

  """
  Resizes the image to the specified dimensions, changing the original aspect ratio if needed.
  """
  SCALE

  """
  Creates a thumbnail from the image.
  """
  THUMB
}

input ImageTransformOptions {
  """
  Desired background color, used with corner radius or `PAD` resize strategy.
          Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  """
  backgroundColor: HexColor

  """
  Desired corner radius in pixels.
          Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
          Defaults to `0`. Uses desired background color as padding color,
          unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  """
  cornerRadius: Int

  """
  Desired image format. Defaults to the original image format.
  """
  format: ImageFormat

  """
  Desired height in pixels. Defaults to the original image height.
  """
  height: Dimension

  """
  Desired quality of the image in percents.
          Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  """
  quality: Quality

  """
  Desired resize focus area. Defaults to `CENTER`.
  """
  resizeFocus: ImageResizeFocus

  """
  Desired resize strategy. Defaults to `FIT`.
  """
  resizeStrategy: ImageResizeStrategy

  """
  Desired width in pixels. Defaults to the original image width.
  """
  width: Dimension
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
[See type definition](https://app.contentful.com/spaces/lkq9rik3wezf/content_types/media)
"""
type Media implements Entry {
  contentfulMetadata: ContentfulMetadata!
  imagesCollection(
    limit: Int = 100
    locale: String
    preview: Boolean
    skip: Int = 0
  ): AssetCollection
  layout(locale: String): String
  linkedFrom(allowedLocales: [String]): MediaLinkingCollections
  sys: Sys!
  title(locale: String): String
}

type MediaCollection {
  items: [Media]!
  limit: Int!
  skip: Int!
  total: Int!
}

input MediaFilter {
  AND: [MediaFilter]
  OR: [MediaFilter]
  contentfulMetadata: ContentfulMetadataFilter
  imagesCollection_exists: Boolean
  layout: String
  layout_contains: String
  layout_exists: Boolean
  layout_in: [String]
  layout_not: String
  layout_not_contains: String
  layout_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type MediaLinkingCollections {
  entryCollection(
    limit: Int = 100
    locale: String
    preview: Boolean
    skip: Int = 0
  ): EntryCollection
  projectCollection(
    limit: Int = 100
    locale: String
    order: [MediaLinkingCollectionsProjectCollectionOrder]
    preview: Boolean
    skip: Int = 0
  ): ProjectCollection
}

enum MediaLinkingCollectionsProjectCollectionOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/lkq9rik3wezf/content_types/mediaOrText)
"""
type MediaOrText implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): MediaOrTextLinkingCollections
  sys: Sys!
  title(locale: String): String
}

type MediaOrTextCollection {
  items: [MediaOrText]!
  limit: Int!
  skip: Int!
  total: Int!
}

input MediaOrTextFilter {
  AND: [MediaOrTextFilter]
  OR: [MediaOrTextFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type MediaOrTextLinkingCollections {
  entryCollection(
    limit: Int = 100
    locale: String
    preview: Boolean
    skip: Int = 0
  ): EntryCollection
}

enum MediaOrder {
  layout_ASC
  layout_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/lkq9rik3wezf/content_types/page)
"""
type Page implements Entry {
  body(locale: String): PageBody
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  linkedFrom(allowedLocales: [String]): PageLinkingCollections
  slug(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type PageBody {
  json: JSON!
  links: PageBodyLinks!
}

type PageBodyAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type PageBodyEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type PageBodyLinks {
  assets: PageBodyAssets!
  entries: PageBodyEntries!
  resources: PageBodyResources!
}

type PageBodyResources {
  block: [ResourceLink!]!
}

type PageCollection {
  items: [Page]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PageFilter {
  AND: [PageFilter]
  OR: [PageFilter]
  body_contains: String
  body_exists: Boolean
  body_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type PageLinkingCollections {
  entryCollection(
    limit: Int = 100
    locale: String
    preview: Boolean
    skip: Int = 0
  ): EntryCollection
}

enum PageOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/lkq9rik3wezf/content_types/project)
"""
type Project implements Entry {
  blocksCollection(
    limit: Int = 100
    locale: String
    preview: Boolean
    skip: Int = 0
    where: MediaOrTextFilter
  ): ProjectBlocksCollection
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  linkedFrom(allowedLocales: [String]): ProjectLinkingCollections
  slug(locale: String): String
  sys: Sys!
  thumbnail(locale: String, preview: Boolean): Asset
  title(locale: String): String
}

type ProjectBlocksCollection {
  items: [ProjectBlocksItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

union ProjectBlocksItem = Media | Text

type ProjectCollection {
  items: [Project]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ProjectFilter {
  AND: [ProjectFilter]
  OR: [ProjectFilter]
  blocks: cfMediaOrTextNestedFilter
  blocksCollection_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  thumbnail_exists: Boolean
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type ProjectLinkingCollections {
  entryCollection(
    limit: Int = 100
    locale: String
    preview: Boolean
    skip: Int = 0
  ): EntryCollection
  homePageCollection(
    limit: Int = 100
    locale: String
    order: [ProjectLinkingCollectionsHomePageCollectionOrder]
    preview: Boolean
    skip: Int = 0
  ): HomePageCollection
}

enum ProjectLinkingCollectionsHomePageCollectionOrder {
  jobTitle_ASC
  jobTitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ProjectOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
The 'Quality' type represents quality as whole numeric values between `1` and `100`.
"""
scalar Quality

type Query {
  asset(id: String!, locale: String, preview: Boolean): Asset
  assetCollection(
    limit: Int = 100
    locale: String
    order: [AssetOrder]
    preview: Boolean
    skip: Int = 0
    where: AssetFilter
  ): AssetCollection
  entryCollection(
    limit: Int = 100
    locale: String
    order: [EntryOrder]
    preview: Boolean
    skip: Int = 0
    where: EntryFilter
  ): EntryCollection
  homePage(id: String!, locale: String, preview: Boolean): HomePage
  homePageCollection(
    limit: Int = 100
    locale: String
    order: [HomePageOrder]
    preview: Boolean
    skip: Int = 0
    where: HomePageFilter
  ): HomePageCollection
  media(id: String!, locale: String, preview: Boolean): Media
  mediaCollection(
    limit: Int = 100
    locale: String
    order: [MediaOrder]
    preview: Boolean
    skip: Int = 0
    where: MediaFilter
  ): MediaCollection
  mediaOrText(id: String!, locale: String, preview: Boolean): MediaOrText
  mediaOrTextCollection(
    limit: Int = 100
    locale: String
    preview: Boolean
    skip: Int = 0
    where: MediaOrTextFilter
  ): MediaOrTextCollection
  page(id: String!, locale: String, preview: Boolean): Page
  pageCollection(
    limit: Int = 100
    locale: String
    order: [PageOrder]
    preview: Boolean
    skip: Int = 0
    where: PageFilter
  ): PageCollection
  project(id: String!, locale: String, preview: Boolean): Project
  projectCollection(
    limit: Int = 100
    locale: String
    order: [ProjectOrder]
    preview: Boolean
    skip: Int = 0
    where: ProjectFilter
  ): ProjectCollection
  text(id: String!, locale: String, preview: Boolean): Text
  textCollection(
    limit: Int = 100
    locale: String
    order: [TextOrder]
    preview: Boolean
    skip: Int = 0
    where: TextFilter
  ): TextCollection
}

type ResourceLink {
  sys: ResourceSys!
}

type ResourceSys {
  linkType: String!
  type: String!
  urn: String!
}

type Sys {
  environmentId: String!
  firstPublishedAt: DateTime
  id: String!
  publishedAt: DateTime
  publishedVersion: Int
  spaceId: String!
}

input SysFilter {
  firstPublishedAt: DateTime
  firstPublishedAt_exists: Boolean
  firstPublishedAt_gt: DateTime
  firstPublishedAt_gte: DateTime
  firstPublishedAt_in: [DateTime]
  firstPublishedAt_lt: DateTime
  firstPublishedAt_lte: DateTime
  firstPublishedAt_not: DateTime
  firstPublishedAt_not_in: [DateTime]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  publishedAt: DateTime
  publishedAt_exists: Boolean
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  publishedAt_in: [DateTime]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_not: DateTime
  publishedAt_not_in: [DateTime]
  publishedVersion: Float
  publishedVersion_exists: Boolean
  publishedVersion_gt: Float
  publishedVersion_gte: Float
  publishedVersion_in: [Float]
  publishedVersion_lt: Float
  publishedVersion_lte: Float
  publishedVersion_not: Float
  publishedVersion_not_in: [Float]
}

"""
[See type definition](https://app.contentful.com/spaces/lkq9rik3wezf/content_types/text)
"""
type Text implements Entry {
  body(locale: String): TextBody
  contentfulMetadata: ContentfulMetadata!
  link(locale: String): String
  linkedFrom(allowedLocales: [String]): TextLinkingCollections
  subtitle(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type TextBody {
  json: JSON!
  links: TextBodyLinks!
}

type TextBodyAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type TextBodyEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type TextBodyLinks {
  assets: TextBodyAssets!
  entries: TextBodyEntries!
  resources: TextBodyResources!
}

type TextBodyResources {
  block: [ResourceLink!]!
}

type TextCollection {
  items: [Text]!
  limit: Int!
  skip: Int!
  total: Int!
}

input TextFilter {
  AND: [TextFilter]
  OR: [TextFilter]
  body_contains: String
  body_exists: Boolean
  body_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  link: String
  link_contains: String
  link_exists: Boolean
  link_in: [String]
  link_not: String
  link_not_contains: String
  link_not_in: [String]
  subtitle: String
  subtitle_contains: String
  subtitle_exists: Boolean
  subtitle_in: [String]
  subtitle_not: String
  subtitle_not_contains: String
  subtitle_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type TextLinkingCollections {
  entryCollection(
    limit: Int = 100
    locale: String
    preview: Boolean
    skip: Int = 0
  ): EntryCollection
  projectCollection(
    limit: Int = 100
    locale: String
    order: [TextLinkingCollectionsProjectCollectionOrder]
    preview: Boolean
    skip: Int = 0
  ): ProjectCollection
}

enum TextLinkingCollectionsProjectCollectionOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum TextOrder {
  link_ASC
  link_DESC
  subtitle_ASC
  subtitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

input cfMediaOrTextNestedFilter {
  AND: [cfMediaOrTextNestedFilter]
  OR: [cfMediaOrTextNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

input cfProjectNestedFilter {
  AND: [cfProjectNestedFilter]
  OR: [cfProjectNestedFilter]
  blocksCollection_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  thumbnail_exists: Boolean
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}
